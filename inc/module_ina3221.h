#ifndef MODULE_INA3221_H_
#define MODULE_INA3221_H_

#include <stdint.h>

typedef enum{
	ADDRESS_A0_GND = 0b1000000,
	ADDRESS_A0_VS = 0b1000001,
	ADDRESS_A0_SDA = 0b1000010,
	ADDRESS_A0_SCL = 0b1000011
}INA3221_ADDRESS;

typedef enum{
	INA3221_REG_CONFIG = 0x00,
	INA3221_REG_VSHUNT_1,
	INA3221_REG_VBUS_1,
	INA3221_REG_VSHUNT_2,
	INA3221_REG_VBUS_2,
	INA3221_REG_VSHUNT_3,
	INA3221_REG_VBUS_3,
	INA3221_REG_CRITICAL_1,
	INA3221_REG_WARNING_1,
	INA3221_REG_CRITICAL_2,
	INA3221_REG_WARNING_2,
	INA3221_REG_CRITICAL_3,
	INA3221_REG_WARNING_3,
	INA3221_REG_SHUNT_SUM_V,
	INA3221_REG_SHUNT_SUM_LIMIT,
	INA3221_REG_MASK_ENABLE,
	INA3221_REG_POWER_VALID_UPPER,
	INA3221_REG_POWER_VALID_LOWER,
	INA3221_REG_MANUFAC_ID = 0xFE,
	INA3221_REG_DIE_ID = 0xFF
}INA3221_REG;

typedef enum{
	INA3221_RST = 0x8000,
	INA3221_CH1_EN = 0x4000,
	INA3221_CH2_EN = 0x2000,
	INA3221_CH3_EN = 0x1000,
	INA3221_AVG2 = 0x800,
	INA3221_AVG1 = 0x400,
	INA3221_AVG0 = 0x200,
	INA3221_VBUS_CT2 = 0x100,
	INA3221_VBUS_CT1 = 0x80,
	INA3221_VBUS_CT0 = 0x40,
	INA3221_VSH_CT2 = 0x20,
	INA3221_VSH_CT1 = 0x10,
	INA3221_VSH_CT0 = 0x8,
	INA3221_MODE2 = 0x4,
	INA3221_MODE1 = 0x2,
	INA3221_MODE0 = 1
}INA3221_CONFIG_MASK;

typedef struct{
	INA3221_ADDRESS address;
	uint8_t (*write) (INA3221_ADDRESS add, uint8_t *data, uint8_t size);
	uint8_t (*read) (INA3221_ADDRESS add, uint8_t *data, uint8_t size);
}INA3221_DEVICE;

uint8_t ina_init(INA3221_DEVICE *device);
uint16_t ina_getVbus(INA3221_DEVICE *device, INA3221_REG vbus);

#endif /* MODULE_INA3221_H_ */
